---
layout: post
title: 浏览器缓存详解
excerpt: "浏览器缓存对于提升web性能的作用是不言而喻的,这篇文章介绍一些浏览器的缓存机制"
date: 2016-08-23 09:11:34
permalink: /browser-cache/
tags:
- HTTP
---

>Web缓存是可以自动保存常见资源副本的HTTP设备。当Web请求抵达缓存时,如果本地有已缓存的副本,就可以从本地存储设备而不是原始服务器中提取这个资源。

## 为什么要使用缓存

使用缓存有以下优点

+ 缓存`减少了冗余的数据传输`,节省了你的网络费用。
+ 缓存`缓解了网络性能瓶颈的问题`。不需要更多的带宽就能够更快的加载页面。
+ 缓存`降低了对原始服务器的要求`。服务器可以更快的响应,避免过载的情况。
+ 缓存`降低了距离时延`,因为从较远的地方加载页面会更慢一些。

## 缓存处理步骤

缓存处理的流程如下图所示

!['缓存处理步骤'](http://ocd7f3wcw.bkt.clouddn.com/browser-cache-01.png)

上图中出现了两个词对缓存很重要,`新鲜`和`再验证`.

### 新鲜

HTTP通过`Cache-Control`和`Expires`这两个首部,为每个资源附加了一个'过期日期'。这些首部说明了在多长时间内可以将这些内容视为`新鲜`的。

#### Expires策略:

```
Expires: Tus, 23 Aug 2016, 05:00:00 GT
```

`Expires`指定了一个具体的过期时间,在这个时间之前,缓存被认为是新鲜的。

`Expires`是`HTTP 1.0`的东西,现在浏览器均默认使用`HTTP 1.1`,所以它的作用基本忽略。同时,`Expires`要求浏览器和服务器的时钟严格同步,当时钟不同步时,会带来较大误差。
所以从`HTTP 1.1`开始,使用Cache-Control来代替。

#### Cache-Control策略

```
Cache-Control: max-age=484200
```

`Cache-Control` 通过`max-age`来指定缓存的最大使用期——在`max-age`指定的时间内缓存都是新鲜的, `max-age`以秒为单位。

### 再验证

仅仅是已缓存资源过期了并不代表它和原始服务器上的资源不一样了,只是意味着你该去检查一下服务器上的资源是够更新了,这种情况叫做再验证。

+ 如果验证发现服务器上的资源已经更新了,缓存就会获取一份新的资源副本,并将其存储在旧资源的位置上,然后将资源发送给客户端。
+ 如果验证显示内容没有发生变化,缓存只需要获取新的首部,包括一个新的过期时间,并对缓存中的首部进行更新就好了。

#### Last-Modified/If-Modified-Since验证

`IF-Modified-Since`首部可以与Last-Modified服务器响应首部配合工作。

`Last-Modified`标识了资源的最后修改日期,在响应请求时,将这个首部返回;当缓存要对已缓存资源再验证时,就会带上`If-Modified-Since`首部。原始服务器收到请求
后发现有`IF-Modified-Since`首部,则与被请求资源的`Last-Modified`进行比较,如果资源已经被修改过,那么携带新首部的新资源就会被返回并缓存;如果资源没有被修
改过,那么服务器返回一个`304 Not Modified`响应报文,并且包含一个新的过期时间。

#### ETag/If-None-Match验证

`ETag`是资源的实体标签,当资源内容发生了变化时,则修改标签以标识版本变化。在响应请求时,将这个首部返回。当缓存要对已缓存资源进行再验证时,就带上`If-None-Match`
首部,原始服务器发现有`If-None-Match`首部,则与被请求资源的`ETag`进行比较,如果资源已经被修改过,携带新首部的新资源就会被返回并缓存;如果资源没有被修改过,
那么服务器返回一个`304 Not Modified`响应报文,并且包含一个新的过期时间。


#### 既生Last-Modified何生ETag?

>+ 有些资源会被周期性的重写,但实际包含的数据常常是一样的,尽管内容没有发生变化,但是修改日期会发生变化。
>+ 有些资源可能被修改了,但所做的修改并不重要,不需要更新缓存。(比如添加了注释)
>+ 有些服务器无法准确地判定其页面的最后生成时间。
>+ 有些服务器提供的资源会在亚秒间隙进行变化,对这些服务器来说,以秒为粒度的修改日期就不够用了。

## 缓存详细流程图

最后再放一张图,说明了缓存机制的具体流程。

![缓存详细流程](http://ocd7f3wcw.bkt.clouddn.com/browser-cache-02.png)